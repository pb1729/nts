
(def void putch (int ch)
  (putchar ch))

(def int prn_digit (int digit)
  (if (< digit -9) (putchar 35)
  (if (> digit  9) (putchar 35)
  (if (=< 0 digit)
    (putchar (+ 48 digit))
    (putchar (- 48 digit))))))

(predef int pow (int int)) # recursive
(def int pow (int a int b)
  (if (> b 0)
    (* a (pow a (+ -1 b)))
    1))

(def void prn_int (int x int width)
  (for i width
    (if (= i 0)
      (if (< x 0)
        (putchar 45)  # '-'
        (putchar 43)) # '+'
      (prn_digit (/r
        (/ x
          (pow 10 (- width (+ i 1))))
        10)))))

#(def void putint (int x) # TODO: make this work...
#  (for i 2
#    (if (= i 0)
#      (prn_int i 24)
#      (putch 10))))

(prn_int 917342 12) # test number
(putchar 10)
(prn_int -7301002 12) # test negative number
(putchar 10)
(prn_int 0 12) # test zero
(putchar 10)
(prn_int (mod 3 -8) 12) # test mod on negative num
(putchar 10)
(prn_int (/r -8 3) 12) # test r on negative num
(putchar 10)
(prn_int (- 551) 12) # test negation...
(putchar 10)
#(prn_int 12345 40) # test overflow in pow
#(putchar 10)
#(for i 100
#  (prn_int (pow 11 i) 20))

